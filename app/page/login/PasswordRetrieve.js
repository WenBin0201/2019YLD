/** * 密码找回 * */import React from 'react'import { Image, View, TouchableOpacity, Text, TextInput, ScrollView } from 'react-native'import Button from '../../component/Button'import { COLOR_GRAY_9E9E9E } from '../../constant/ColorConstant'import commonStyle from '../../style/CommonStyle'import styles from '../../style/PasswordRetrieveStyle'const backIcon = require('../../image/back.png')class PasswordRetrieve extends React.Component {    constructor(props) {        super(props)        this.state = {            newPassword: '',       // 新密码            repeatPassword: '',    // 重新输入新密码            captchaCode: '',       // 验证码            countDown: 60,         // 倒计时            captchaEnable: true,   //获取验证码是否可点击            modifySuccess: true    // 修改密码是否成功        }    }    componentWillUnmount(): void {        this._recycle && clearInterval(this._recycle)    }    _renderHead = () => {        return (            <View style={[ commonStyle.logoFrame, styles.headContainer ]}>                <TouchableOpacity style={styles.headLeftContainer} onPress={() => this.props.navigation.pop()}>                    <Image source={backIcon} style={styles.headLeftImg} resizeMode={'contain'}/>                </TouchableOpacity>                <Image source={require('../../image/login/logo-text.png')}                       style={[ commonStyle.loginText ]}/>                <Image source={require('../../image/login/logo-icon.png')}                       style={[ commonStyle.loginIcon, styles.headRightImg ]}/>            </View>        )    }    _renderContent = () => {        const { newPassword, repeatPassword, captchaCode, countDown, captchaEnable, modifySuccess } = this.state        let borderColor = 'rgb(244,208,0)'        let color = 'rgb(244,208,0)'        if ( !captchaEnable ){            borderColor = 'gray'            color = 'gray'        }        return (            <View style={styles.contentContainer}>                <View style={styles.newPasswordContainer}>                    <Text style={styles.contentLeftText}>新密码</Text>                    <TextInput                        style={styles.contentRightInput}                        underlineColorAndroid={'transparent'}                        placeholderTextColor={COLOR_GRAY_9E9E9E}                        value={newPassword}                        onChangeText={(text) => {                            this.setState({ newPassword: text })                        }}                        placeholder={'请输入新密码'}/>                </View>                <View style={styles.newPasswordContainer}>                    <Text style={styles.contentLeftText}>重复密码</Text>                    <TextInput                        style={styles.contentRightInput}                        underlineColorAndroid={'transparent'}                        placeholderTextColor={COLOR_GRAY_9E9E9E}                        value={repeatPassword}                        onChangeText={(text) => {                            this.setState({ repeatPassword: text })                        }}                        placeholder={'再次输入新密码'}/>                </View>                <View style={styles.newPasswordContainer}>                    <Text style={styles.contentLeftText}>图形验证</Text>                    <TextInput                        style={styles.captchaInput}                        value={captchaCode}                        onChangeText={(text) => {                            this.setState({ captchaCode: text })                        }}                        underlineColorAndroid={'transparent'}                    />                </View>                <View style={styles.newPasswordContainer}>                    <Text style={styles.contentLeftText}>验证码</Text>                    <Image style={styles.captchaImage}/>                    <View style={styles.getCaptchaContainer}>                        <Text style={styles.secondText}>{countDown}s</Text>                        <TouchableOpacity onPress={this._doGetCaptcha}>                            <Text style={[ styles.getCaptchaText, { borderColor, color } ]}>获取验证码</Text>                        </TouchableOpacity>                    </View>                </View>                <Text style={[ styles.successText, { opacity: modifySuccess ? 1 : 0 } ]}>修改成功，请返回登录！</Text>                <Button width={75} text={'确认修改'} style={styles.modifyButton}/>            </View>        )    }    /**     * 获取验证码点击事件     * @private     */    _doGetCaptcha = () => {        const { captchaEnable } = this.state        if ( !captchaEnable ) return        this.setState({ captchaEnable: false }, () => {            this._timeDown()        })    }    /**     * 递归实现倒计时     * @private     */    _timeDown = () => {        const { countDown } = this.state        if ( this.state.countDown > 0 ){            this.setState({ countDown: countDown - 1 }, () => {                this._recycle = setTimeout(this._timeDown, 1000)            })        } else {            this.setState({ countDown: 60, captchaEnable: true })        }    }    render(): React.ReactNode {        return (            <ScrollView>                <View style={styles.container}>                    {this._renderHead()}                    {this._renderContent()}                </View>            </ScrollView>        )    }}export default PasswordRetrieve